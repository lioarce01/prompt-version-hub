version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: prompt-hub-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-prompt_version_hub}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-prompt_version_hub}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - prompt-hub-network

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: prompt-hub-api
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-prompt_version_hub}
      JWT_SECRET: ${JWT_SECRET:-change_me_in_production}
      JWT_EXPIRES_MIN: ${JWT_EXPIRES_MIN:-60}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@example.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-changeme123}
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      # For development - uncomment to enable hot reload
      # - ./backend/app:/app/app:ro
      - backend_logs:/app/logs
    networks:
      - prompt-hub-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: pgAdmin for database management
  # Uncomment to enable
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: prompt-hub-pgadmin
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
  #     PGADMIN_LISTEN_PORT: 80
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   networks:
  #     - prompt-hub-network

volumes:
  postgres_data:
    name: prompt-hub-postgres-data
  backend_logs:
    name: prompt-hub-backend-logs
  # pgadmin_data:
  #   name: prompt-hub-pgadmin-data

networks:
  prompt-hub-network:
    name: prompt-hub-network
    driver: bridge
